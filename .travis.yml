matrix:
  include: #allows to set up tests/deploys in different languages/environments.
    - stage: test # groups builds by type, add your tests here
      language: r
      r: bioc-release
      cache: packages
      os: linux
      r_build_args: '--no-build-vignettes'
      r_check_args: '--ignore-vignettes'
      addons:
        apt:
          packages:
            - g++-6
          sources:
            - ubuntu-toolchain-r-test
      env:
        - MATRIX_EVAL="CXX=g++-6 && CC=gcc-6"
      before_install:
        - eval "${MATRIX_EVAL}"
        #- bash configure.sh
        #- cat DESCRIPTION
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-6 90
        - gcc --version
        - g++ --version
        # from https://travis-ci.org/dmenne/breathteststan/jobs/541721978/config
        # https://discourse.mc-stan.org/t/building-rstanarm-like-packagee-on-travis-with-c-14/6054/17
        - mkdir -p ~/.R
        - echo "CXX14FLAGS = -O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function -Wno-unused-local-typedefs -Wno-ignored-attributes -Wno-macro-redefined" >> ~/.R/Makevars
        - echo "CXX14 = g++-6 -std=c++1y -fPIC" >> ~/.R/Makevars
      r_packages:
        - covr
      after_success:
        - Rscript -e 'library(covr); codecov()'
    - stage: deploy # this block builds and deploys the docs, it's in Python.
      language: python
      install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
        - bash miniconda.sh -b -p $HOME/miniconda
        - export PATH="$HOME/miniconda/bin:$PATH"
        - hash -r
        - conda config --set always_yes yes --set changeps1 no
        - conda update -q conda
        - conda info -a
        - conda create -q -n test-env python=$TRAVIS_PYTHON_VERSION
        - source activate test-env
        - sudo apt-get install jq
        - pip install mkdocs==1 mkdocs-material==3.0.3
        - conda install r-knitr r-devtools
        - R -e 'remove.packages(c("curl","httr")); install.packages(c("curl", "httr"), repos="http://cran.mtu.edu"); Sys.setenv(CURL_CA_BUNDLE="/utils/microsoft-r-open-3.5.0/lib64/R/lib/microsoft-r-cacert.pem")'
        - R -e 'install.packages("Rd2md", repos="http://cran.mtu.edu")'
        - R -e 'install.packages("Rcpp", repos="http://cran.mtu.edu")'
        - R -e 'install.packages("BiocManager", repos="htpp://cran.mtu.edu")'
        - R -e 'library(devtools); install_github("compbiocore/RSeqAn",build_vignettes=FALSE)'
      before_script:
        - source activate test-env
      script:
        - mkdir docs
        - Rscript make.R
        - mkdir docs/styles
        - mkdir docs/images
        - curl https://api.github.com/repos/compbiocore/cbc-documentation-templates/contents/files/dark_mode.css\?access_token\=$GITHUB_PAT > dark_mode.json
        - jq -r '.content' < dark_mode.json | base64 --decode > docs/styles/dark_mode.css
        - curl https://api.github.com/repos/compbiocore/cbc-documentation-templates/contents/files/cbc-logo.svg\?access_token\=$GITHUB_PAT > logo.json
        - jq -r '.content' < logo.json | base64 --decode > docs/images/cbc-logo.svg
        - mkdocs build --verbose --clean --strict
      deploy:
       provider: pages
       skip_cleanup: true
       github_token: $GITHUB_PAT
       local_dir: site
       on:
         branch: master
