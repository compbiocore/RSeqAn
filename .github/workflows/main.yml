# This is a basic workflow to help you get started with Actions

name: Buid and Deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # from: https://github.com/r-lib/actions/blob/master/examples/test-coverage.yaml
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v1
      - uses: r-lib/actions/setup-pandoc@v1
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}
        
      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install dependencies
        run: |
          install.packages(c("remotes"))
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}        
        
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      # Runs a set of commands using the runners shell
      - name: Setup Mkdocs
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          activate-environment: foo
      - name: install
        run:
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
          bash miniconda.sh -b -p $HOME/miniconda
          export PATH="$HOME/miniconda/bin:$PATH"
          hash -r
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a
          conda create -q -n test-env python=$TRAVIS_PYTHON_VERSION
          source activate test-env
          sudo apt-get install jq
          pip install mkdocs==1 mkdocs-material==3.0.3
          conda install r-knitr r-devtools
          R -e 'remove.packages(c("curl","httr")); install.packages(c("curl", "httr"), repos="http://cran.mtu.edu"); Sys.setenv(CURL_CA_BUNDLE="/utils/microsoft-r-open-3.5.0/lib64/R/lib/microsoft-r-cacert.pem")'
          R -e 'install.packages("Rd2md", repos="http://cran.mtu.edu")'
          R -e 'install.packages("Rcpp", repos="http://cran.mtu.edu")'
        #- R -e 'install.packages("BiocManager", repos="htpp://cran.mtu.edu")' r-base is still 3.5.1 for now
          R -e 'source("https://bioconductor.org/biocLite.R"); biocLite("BiocInstaller");'
          R -e 'library(devtools); install_github("compbiocore/RSeqAn",build_vignettes=FALSE)'
      - name: Bash
        shell: bash -l {0}
        run: |
          conda install python=3 pip
          pip install mkdocs mkdocs-material
          mkdocs -h
          mkdir -p docs/styles
          mkdir -p docs/assets
          mkdir -p mkdocs_build
          curl https://gist.githubusercontent.com/fernandogelin/08ecff3387dffc374c4abf06a577ab71/raw/29ad95fcc771ce49ff6cecc56346218a0e929df8/dark_mode.css > docs/styles/dark_mode.css
          curl https://gist.githubusercontent.com/fernandogelin/b02ee98f2f35ce4263093f7a1c66582b/raw/20ca5a37eb6defe00d35e50e7e00a784b64309f9/cbc-logo.svg > docs/assets/cbc-logo.svg
          mkdocs build -d mkdocs_build --verbose --clean --strict
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
         GITHUB_TOKEN: ${{ secrets.GHPAGES_MKDOCS }}
         BRANCH: gh-pages # The branch the action should deploy to.
         FOLDER: mkdocs_build # The folder the action should deploy.
         CLEAN: true # Automatically remove deleted files from the deploy branch
